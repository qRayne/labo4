services:
  store_manager:
    build: .
    volumes:
      - .:/app
    expose:
      - "5000"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - labo04-network
    depends_on:
      - mysql
      - redis
    deploy:
      replicas: 3

  locust:
     image: locustio/locust
     ports:
       - "8089:8089"
     volumes:
       - ./locustfiles:/mnt/locust
     command: -f /mnt/locust/locustfile.py --host=http://nginx:80
     depends_on:
      - store_manager
     networks:
       - labo04-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - labo04-network
    depends_on:
      - store_manager

  mysql:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: labo04_db
      MYSQL_USER: labo04
      MYSQL_PASSWORD: labo04
    networks:
      - labo04-network
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d

  redis:
    image: redis:7
    restart: unless-stopped
    networks:
      - labo04-network
    ports:
      - "6379:6379"

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - store_manager
    networks:
      - labo04-network

networks:
  labo04-network:
    driver: bridge
    external: true

volumes:
  mysql_data:
  prometheus_data:
